四，课件相关 LectureSlideController 课件是一个lecture里的所有文件，关联Lecture
4.1 创建课件,仅限教师
a,请求方法：POST
b,URL：http://localhost:8080/api/slides/{userId}/{lectureId}/create
=
c,路径参数：{lectureId}要上传的课件所在的讲座
d,请求体：LectureSlideDTO
{
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}
e,响应示例：LectureSlideDTO
{
    "slideId":1,
    "lectureId":1,
    "extractedText":null,
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}
4.11 上传文件到课件，仅限教师
a,请求方法：POST
b,URL：http://localhost:8080/api/slides/{userId}/{slideId}/updateFile
*数据采用 multipart/form-data 格式传入文件
c,路径参数：{lectureId}要上传的课件所在的讲座
d,请求体：无
e,响应示例：LectureSlideDTO
{
    "slideId":1,
    "lectureId":1,
    "extractedText":"文件的二进制存储格式",
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}

4.2 下载课件
a,请求方法：GET
b,URL：http://localhost:8080/api/slides/{slideId}/download
c,路径参数：{slideId}
d,请求体：无
e,响应示例：byte[]
文件的二进制存储

4.3 更新课件
a,请求方法：PUT
b,URL：http://localhost:8080/api/slides/{userId}/{slideId}/update
*数据采用 multipart/form-data 格式传入文件
c,路径参数：{slideId}
d,请求体：LectureSlideDTO
{
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}

e,响应示例：LectureSlideDTO
{
    "slideId":1,
    "lectureId":1,
    "extractedText":"文件的二进制存储格式",
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}
4.4 根据id获取课件内容
a,请求方法：GET
b,URL：http://localhost:8080/api/slides/{slideId}/getById
c,路径参数：{slideId}
d,请求体：无
e,响应示例：LectureSlideDTO
{
    "slideId":1,
    "lectureId":1,
    "extractedText":"文件的二进制存储格式",
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}
4.5 获取某讲座所有课件
a,请求方法：GET
b,URL：http://localhost:8080/api/slides/{lectureId}/getByLecture
c,路径参数：{lectureId}
d,请求体：无
e,响应示例：List<LectureSlideDTO>
{
    "slideId":1,
    "lectureId":1,
    "extractedText":"文件的二进制存储格式",
    "url":"(存放文件的云仓库地址)",
    "content":"直接存放的内容"
}
4.6 删除课件
a,请求方法：DELETE
b,URL：http://localhost:8080/api/slides/{userId}/{slideId}/delete
c,路径参数：{slideId}
d,请求体：无
e,响应示例：String
课件成功删除
